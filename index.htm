<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Portfolio</title>
  <!-- Tailwind CSS -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- GSAP -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
  <!-- AOS CSS -->
<link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">

<!-- AOS JS -->
<script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
</head>

<body class="bg-gray-100 !important">

  <!-- NAVBAR (Absolute) -->
  <nav class="fixed top-0 left-0 w-full z-50 " style="background-color: none;">
    <div class="container mx-auto px-12 py-4 flex justify-between items-center">
      <!-- Logo / Title -->
      <a href="#" class="text-3xl font-bold text-lime-600">CodeWithAhsan</a>

      <!-- Desktop Links -->
      <ul class="hidden md:flex space-x-6 text-lg">
        <li><a href="#" class="text-white hover:text-lime-600 transition">Home</a></li>
        <li><a href="#" class="text-white hover:text-lime-600 transition">About</a></li>
        <li><a href="#" class="text-white hover:text-lime-600 transition">Works</a></li>
        <li><a href="#" class="text-white hover:text-lime-600 transition">Contact</a></li>
        <li><a href="#" class="text-white hover:text-lime-600 transition">Blog</a></li>
      </ul>

      <!-- Mobile Menu Button -->
      <button id="menu-btn" class="md:hidden text-gray-700 text-2xl focus:outline-none">
        ☰
      </button>
    </div>

    <!-- Mobile Menu (Dropdown) -->
    <div id="mobile-menu" class="hidden md:hidden bg-white/80 px-8 py-4">
      <ul class="space-y-4 text-lg">
        <li><a href="#" class="block text-gray-700 hover:text-lime-600 transition">Home</a></li>
        <li><a href="#" class="block text-gray-700 hover:text-lime-600 transition">About</a></li>
        <li><a href="#" class="block text-gray-700 hover:text-lime-600 transition">Works</a></li>
        <li><a href="#" class="block text-gray-700 hover:text-lime-600 transition">Contact</a></li>
        <li><a href="#" class="block text-gray-700 hover:text-lime-600 transition">Blog</a></li>
      </ul>
    </div>
  </nav>

  <!-- HERO SECTION -->
  <section class="flex flex-col md:flex-row h-screen">
    <!-- LEFT SIDE -->
    <div class="w-full md:w-1/2 flex flex-col justify-center px-8 md:px-16 pt-[6rem] md:pt-[4.25rem] pb-10"
      id="hero-left">
      <p class="text-green-600">Hello!</p>
      <h1 style="font-size: 10rem;" class="font-bold text-gray-800 leading-tight">
        Ahsan <br /> Javaid
      </h1>
      <span id="typing-animation" class="block mt-4 text-4xl md:text-5xl text-lime-600" style="color: #1F2937;"></span>

      <!-- LinkedIn & GitHub Buttons -->
      <div class="mt-6 flex space-x-4">
        <a href="https://www.linkedin.com/in/ahsan-javaid-75032319b/"
          class="inline-block bg-green-600 text-white px-5 py-3 text-lg rounded-md transition-transform transform hover:scale-105 hover:bg-green-700">
          LinkedIn
        </a>
        <a href="https://github.com/ehsanjavaid"
          class="inline-block bg-green-600 text-white px-5 py-3 text-lg rounded-md transition-transform transform hover:scale-105 hover:bg-green-700">
          GitHub
        </a>
      </div>
    </div>

    <!-- RIGHT SIDE -->
    <div class="w-full md:w-1/2 bg-gray-900 relative rounded-bl-lg overflow-hidden" id="hero-image">
      <img src="public/354186488_103641379446717_7754200830373512492_n.jpg" alt="Hero Image"
        class="absolute inset-0 w-full h-full object-cover object-center" />
    </div>
  </section>
  <!-- About Section -->
  <section class="relative py-28 bg-gray-100">
    <div class="container mx-auto flex flex-col md:flex-row items-center">

      <div class="relative w-full md:w-1/2 flex justify-center">
        <!-- Green Shape Behind the Image -->
        <div class="absolute -left-10 bottom-0 w-40 h-40 bg-lime-400 -z-10 rounded-xl"></div>
        <div class="absolute left-10 top-10 w-32 h-32 bg-lime-200 opacity-50 -z-10 rounded-xl"></div>
      
        <!-- Profile Image Container -->
        <div class="relative w-4/5 h-auto overflow-hidden rounded-xl shadow-lg group">
          <!-- Profile Image -->
          <img src="public/355077628_103020756175446_8089399740487638059_n.jpg" alt="Profile"
            class="w-full h-full object-cover rounded-xl transition-all duration-500 ease-in-out group-hover:scale-105" />
      
          <!-- Overlay Effect -->
          <div class="absolute inset-0 bg-black bg-opacity-10 opacity-0 group-hover:opacity-100 transition-all duration-500"></div>
        </div>
      </div>
      
      

      <!-- RIGHT SIDE (Text + Info) -->
      <div class="w-full md:w-1/2 px-6 md:px-12 py-8 md:py-0">
        <!-- Small Heading -->
        <h2 class="text-green-600 text-sm font-semibold uppercase mb-2">
          About Me
        </h2>

        <!-- Main Title -->
        <h1 class="text-[50px] text-gray-800 font-bold mb-[30px]" style="font-family: 'Poppins', sans-serif;">
          Turning Ideas into Robust Web & ERP Solutions
        </h1>

        <!-- Paragraph -->
        <p class="text-gray-600 leading-relaxed mb-6">
          I am deeply passionate about coding and constantly strive to learn new things. My primary expertise lies in
          the <b>Frappe Framework </b>, where I specialize in building dynamic, scalable, and efficient ERP solutions. With
          experience in **customizing and developing Frappe apps**, I have worked on various projects that streamline
          business processes and enhance productivity.

          Beyond Frappe, I also have strong web development skills, including <b>HTML, Tailwind CSS, and
          Bootstrap</b>, which help me create modern and responsive user interfaces for ERP systems. My enthusiasm for
          technology and problem-solving drives me to develop solutions that make a real impact.

          I believe that knowledge is meant to be shared. By contributing to the <b>Frappe community</b> and helping others
          understand its potential, I aim to empower developers and businesses alike. For me, coding is not just about
          writing code—it's about <b>building systems that solve real-world problems efficiently.</b>
        </p>

        <!-- Info Table -->
        <div class="grid grid-cols-2 gap-y-2 gap-x-6 text-gray-700 text-sm">
          <p><span class="font-bold">Name:</span> Ahsan Javaid</p>
          <p><span class="font-bold">Age:</span> 25 Years</p>
          <p><span class="font-bold">Occupation:</span> Software Engineer</p>
          <p><span class="font-bold">Education:</span> Bachlor In Computer Science</p>
          <p><span class="font-bold">Email:</span> ehsanjavaid321@gmail.com</p>
          <p><span class="font-bold">Nationality:</span> Pakistani</p>
          <p><span class="font-bold">Freelance:</span> Available</p>
        </div>
      </div>
    </div>
  </section>


  <!-- GSAP Animations -->
  <script>
    // Fade in Navbar from top
    gsap.from("nav", {
      opacity: 0,
      y: -50,
      duration: 1,
      ease: "power2.out"
    });

    // Left Hero Section Animations
    gsap.from("#hero-left h1", {
      opacity: 0,
      x: -50,
      duration: 1,
      delay: 0.3,
      ease: "power2.out"
    });
    gsap.from("#hero-left p", {
      opacity: 0,
      x: -50,
      duration: 1,
      delay: 0.6,
      ease: "power2.out"
    });

    // Right Hero Section Animations
    gsap.from("#hero-image", {
      opacity: 0,
      x: 50,
      duration: 1,
      delay: 0.3,
      ease: "power2.out"
    });
    // intializing AOS
    AOS.init();

    // Mobile Menu Toggle
    const menuBtn = document.getElementById('menu-btn');
    const mobileMenu = document.getElementById('mobile-menu');

    menuBtn.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });

    // Typing Animation
    const typingAnimationElement = document.getElementById('typing-animation');
    const typingTexts = [
      'Software Engineer ',
      'Frappe Developer ',
      'Web Developer'
    ];

    function playTypingAnimation(text) {
      for (let i = 0; i < text.length; i++) {
        setTimeout(() => {
          typingAnimationElement.textContent += text[i];
        }, i * 200);
      }
      setTimeout(() => {
        typingAnimationElement.textContent = '';
        const nextIndex = (typingTexts.indexOf(text) + 1) % typingTexts.length;
        playTypingAnimation(typingTexts[nextIndex]);
      }, text.length * 200 + 1000);
    }
    playTypingAnimation(typingTexts[0]);
  </script>
</body>

</html>